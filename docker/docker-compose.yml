# 指定版本
version: '3.7'

services:
  # 数据库服务
  tutor-selection-mysql:
    # 容器命名
    container_name: tutor-selection-mysql
    # 指定mysql官方镜像
    image: mysql:8
    # 数据挂载，宿主位置:容器位置，容器中的数据与宿主机的文件夹进行挂载，防止删除容器后数据丢失，或者当使用新的容器，想使用原来的数据时方便恢复，后面的容器的位置是官方定义的
    volumes:
      - ./mysql/data/:/var/lib/mysql/
    # 声明网络
    networks:
      - springboot-mysql-nginx-network
    # 环境变量，mysql要求提供，根据此密码可以进入容器mysql中
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root

  # Springboot服务
  tutor-selection-openjdk:
    # 容器命名
    container_name: tutor-selection-openjdk
    #通过./springboot下的dockerfile构建镜像
    build:
      context: ./springboot
    networks:
      - springboot-mysql-nginx-network
    # 环境变量
    environment:
      # 从当前的网络中找指定主机端口
      - dhost=tutor-selection-mysql
      # 登录名密码
      - dusername=root
      - dpassword=root
    # 将容器端口映射到宿主机端口，可以声明也可以不声明，一般情况下不会将后端端口直接暴露出去
    ports:
      - "8080:8080"
    # 声明依赖于那个服务
    depends_on:
      - tutor-selection-mysql

  # nginx服务
  tutor-selection-nginx:
    # 容器命名
    container_name: tutor-selection-nginx
    # 构建镜像
    build:
      context: ./vue
    networks:
      - springboot-mysql-nginx-network
    # 环境变量配置
    environment:
      # 配置前端Nginx反向代理路径
      - backend=tutor-selection-openjdk:8080
    # 映射端口 主机a->容器b 通过宿主机指定端口a访问容器内指定端口b
    ports:
      - "80:80"
    depends_on:
      - tutor-selection-openjdk

# 创建桥接网络，实现容器之间互交
networks:
  springboot-mysql-nginx-network:
    driver: bridge